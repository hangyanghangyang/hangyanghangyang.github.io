@font-face {
    font-family: 'HeydingsControlsRegular';
    src: url('fonts/heydings_controls-webfont.eot');
    src: url('fonts/heydings_controls-webfont.eot?#iefix') format('embedded-opentype'),
         url('fonts/heydings_controls-webfont.woff') format('woff'),
         url('fonts/heydings_controls-webfont.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}

/* I chose the colour palette, black, white, and purple, based on the colour tone of the video content, to make the website visually coherent, engaging, and immersive. I also added the same colour with different transparency depending on the needs of the interactive experience. */

/* The visual style of the media player is inspired by the style of the music video. While keeping the video visible, clear, and prominent, I added an outer glow and rounded corners to simulate a real screen to enhance the visual experience. I try to make the style to be cool but minimalist. */

:root {
  --col-01:rgb(21, 2, 26);
  --col-01-alpha:rgba(21, 2, 26, .8);
  --col-01-alpha2:rgba(21, 2, 26, .4);
  --col-02:rgb(254, 212, 255);
  --col-02-alpha:rgba(254, 212, 255, .8);
  --col-02-alpha2:rgba(254, 212, 255, .4);
  --col-02-bright:rgb(253, 151, 255);
  --col-03:#fff;
  --col-04:#000;
  --col-04-alpha:rgba(0,0,0,0.3);
  --col-04-alpha2:rgba(0,0,0,0.6);
  --col-05:rgba(132, 52, 151, 0.8);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: content-box;
}

body {
  background-color: var(--col-01);
}

video {
  border: 2px solid var(--col-03);
}

.player {
  position: relative;
  margin-top: 5%;
  text-align: center;
}


#media {
  /* To make the website responsive. */
  width: 90vw;
  border-radius: 50px;
  padding: 10px;
  /* To centre the media player on the page. */
  margin: 0 auto;
  max-width: 1100px;
  /* The outer glow effect mentioned above. */
  box-shadow: 0px 5px 30px var(--col-02);
}

.video-controls {
  visibility: hidden;
  opacity: 0;
  width: 600px;
  border-radius: 25px;
  position: absolute;
  bottom: 30px;
  left: 20px;
  right: 20px;
  margin: 0 auto;
  box-shadow: 3px 3px 5px var(--col-04);
  transition: 1s all;
  display: flex;
  /* To centre the controls. */
  text-align: center;
  padding: 5px 15px;
}

button, .controls {
  background: linear-gradient(to bottom, var(--col-01-alpha), var(--col-02-alpha));
  box-shadow: 0px 5px 10px var(--col-04),
    1px 1px 1px var(--col-03);
}

.player:hover .controls, player:focus .controls {
  opacity: 1;
}

button:before,
.play:before {
  font-family: HeydingsControlsRegular;
  font-size: 20px;
  position: relative;
  content: attr(data-icon);
  color: var(--col-03);
  text-shadow: 1px 1px 0px var(--col-04);
}

button,
.timer {
  height: 38px;
  line-height: 19px;
  box-shadow: inset 0 -5px 10px var(--col-04-alpha);
  border-right: 1px solid var(--col-04);
}

button {
  position: relative;
  border: 0;
  flex: 1;
  outline: none;
  cursor: pointer;
  margin-left: 10px;
  border-radius: 50%;
}

.stop,
.fwd {
  margin-right: 10px;
}

.timer {
  line-height: 38px;
  font-size: 12px;
  font-family: monospace;
  text-shadow: 1px 1px 0px var(--col-04);
  color: var(--col-03);
  flex: 6;
  position: relative;
}

.timer div {
  position: absolute;
  background: linear-gradient(to bottom, var(--col-02-alpha2), var(--col-01-alpha2));
  left: 0;
  top: 0;
  width: 0;
  height: 38px;
  border-radius: 5px;
  z-index: 2;
}

.timer span {
  position: absolute;
  z-index: 3;
  left: 19px;
}

/* Drop-shadow is a great way to provide feedback to the user to show possible interactions. */
button:hover,button:focus {
  box-shadow: 2px 2px 1px var(--col-04);
  transition: all .5s;
}

/* Inner-shadow is giving feedback in response to users' interactions. */
button:active {
  box-shadow: inset 3px 3px 2px var(--col-04);
  transition: all .3s;
}

.active:before {
  color: var(--col-02-bright);
}

/* Full-screen button */
.fs {
  border-radius: 50%;
  margin-left: 10px;
  font-size: 12px;
}

/* Replay button */
.replay{
  background: var(--col-02-alpha);
  position: absolute;
  top: 50%;
  left: 50%;
  width: 50px;
  height: 50px;
  padding: 15px;
  border-radius: 50%;
  transform: translate(-50%,-50%);
  /* To make it invisible until the video is finished playing. */
  display: none;
  /* Cursor as a hint to tell users that this button can be clicked. */
  cursor: pointer;
  /* Simple hover animations of the drop-shadow and size are feedback to hint at possible interaction. */
  box-shadow: 0 0 10px var(--col-04);
  transition: all .3s;
}

.replay::before {
  font-size: 40px;
  line-height: 50px;
}
.replay:hover{
  background: var(--col-05);
  padding: 20px;
  box-shadow: 0px 30px 20px var(--col-04-alpha2);
}

/* To make the website to be responsive on different displays. */
@media only screen and (min-width: 300px) {
  .video-controls {
    width: 400px;
  }

  button {
    flex: 4;
  }

  button:before,
  .play::before,
  .stop::before {
    font-size: 14px;
  }
}

@media only screen and (min-width: 600px) {
  .video-controls {
    width: 400px;
  }

  button {
    flex: 4;
  }

  button:before,
  .play::before,
  .stop::before {
    font-size: 13px;
  }
}

@media only screen and (min-width: 900px) {
  .video-controls {
    width: 600px;
  }
  button {
    flex: 1;
  }
  button:before,
  .play::before,
  .stop::before {
    font-size: 16px;
  }
}